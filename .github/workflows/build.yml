name: Cat Api Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  CAT_API_KEY: ${{ secrets.CAT_API_KEY }}
  EC2_DNS: ${{ vars.EC2_DNS }}
  EC2_USER: ubuntu
  DOCKER_REPO: cat-api-angular-project
  NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

jobs:
  docker-prd-build:
    name: Docker Production Build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build Container
        run: |
          docker compose -f compose.yml -f compose/deploy.yml build

      - name: Tag Images
        run: |
          docker tag ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }} "${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest"

      - name: Push to Repository
        run: |
          docker push "${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest"

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker-prd-build
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ env.SSH_KEY }}
          known_hosts: ${{ env.EC2_DNS }}

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_DNS }} "
            docker login -u '${{ env.DOCKER_USERNAME }}' -p '${{ env.DOCKER_PASSWORD }}'
            docker pull '${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest'
            docker stop cat-api || true
            docker rm cat-api || true
            docker run -d --name cat-api \
              -e CAT_API_KEY='${{ env.CAT_API_KEY }}' \
              -e NODE_ENV='${{ env.NODE_ENV }}' \
              -p 3000:3000 \
              '${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest'
          "
